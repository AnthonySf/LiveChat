{"version":3,"sources":["components/Message.js","components/MessageList.js","components/SendMessageForm.js","components/RoomList.js","components/LogIn.js","components/NavBar.js","components/NewRoomForm.js","components/UsersList.js","App.js","index.js"],"names":["Message","className","this","props","username","text","React","Component","MessageList","node","ReactDOM","findDOMNode","shouldScrollToBottom","scrollTop","clientHeight","scrollHeight","roomId","messages","map","message","index","key","senderId","parts","payload","content","SendMessageForm","state","handleChange","bind","handleSubmit","e","setState","target","value","preventDefault","sendMessage","console","log","onSubmit","disabled","onChange","placeholder","type","Class","RoomList","orderedRooms","rooms","sort","a","b","id","room","active","onClick","subscribeToRoom","href","name","LogIn","handleLogIn","class","align","aria-label","aria-describedby","role","data-dismiss","aria-hidden","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-haspopup","aria-labelledby","NewRoomForm","roomName","createRoom","required","UsersList","Object","values","roomUsers","userPresence","entries","push","App","joinableRooms","joinedRooms","isLoggedIn","currentRoom","getRooms","RenderChatRoom","Connect","updateRoomUsers","userIdPassed","tokenProvider","chatkit","TokenProvider","url","ChatManager","instanceLocator","userId","connect","onPresenceChanged","user","then","currentUser","catch","error","getJoinableRooms","err","subscribeToRoomMultipart","hooks","onMessage","users","presenceStore","sendSimpleMessage","render","document","getElementById"],"mappings":"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","file":"static/js/main.90ddfdc8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Message extends React.Component {  \r\n    render() {\r\n        return (\r\n            <div className=\"message\">\r\n                <div className=\"message-username\">{this.props.username }</div>\r\n                <div className=\"message-text\">{ this.props.text}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Message from './Message'\r\n\r\n\r\nclass MessageList extends React.Component {\r\n\r\n\r\n\r\n    componentWillUpdate() {\r\n        const node = ReactDOM.findDOMNode(this)\r\n        this.shouldScrollToBottom = node.scrollTop + node.clientHeight + 100 >= node.scrollHeight\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if (this.shouldScrollToBottom) {\r\n            const node = ReactDOM.findDOMNode(this)\r\n            node.scrollTop = node.scrollHeight   \r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        \r\n        if (!this.props.roomId) {\r\n\r\n            return (\r\n                <div className=\"message-list\">\r\n                    <div className=\"join-room\">\r\n                        &larr; Join a room!\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"message-list\">\r\n                {this.props.messages.map((message, index) => {\r\n                    return (\r\n                        <Message key={index} username={message.senderId} text={message.parts[0].payload.content} />  \r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageList","import React from 'react'\r\n\r\nclass SendMessageForm extends React.Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            message: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({message: e.target.value});\r\n        \r\n    }\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        this.props.sendMessage(this.state.message);\r\n        this.setState({message: ''})\r\n        \r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.message)\r\n        return (\r\n            <form \r\n            onSubmit={this.handleSubmit}\r\n            className=\"send-message-form\">\r\n                <input\r\n                    disabled={this.props.disabled}\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"Say Something\"\r\n                    value = {this.state.message}\r\n                    type=\"text\" />\r\n                    <button Class=\"btn btn-primary btn-lg\" type= \"Submit\">Send</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SendMessageForm","import React from 'react'\r\n\r\nclass RoomList extends React.Component {\r\n    render () {\r\n        const orderedRooms = [...this.props.rooms].sort((a, b) => a.id - b.id)\r\n        //console.log(this.props.rooms)\r\n        return (\r\n            <div className=\"rooms-list border border-primary border-3\">\r\n            <ul>\r\n            <h3>Rooms:</h3>\r\n            <hr></hr>\r\n                {orderedRooms.map(room => {\r\n                    const active = this.props.roomId === room.id ? \"active\" : \"\";\r\n                    return (\r\n                        <li key={room.id} className={\"room \" + active}>\r\n                            <a onClick={() => this.props.subscribeToRoom(room.id)} href=\"#\"># {room.name}</a>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomList","import React, { Component } from 'react';\r\n\r\nclass LogIn extends Component {\r\n    constructor(){\r\n        super();\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleLogIn = this.handleLogIn.bind(this);\r\n    }\r\n    state = { \r\n        username: \"\"\r\n     }\r\n\r\n\r\n\r\n\r\n    handleLogIn(e){\r\n        e.preventDefault();\r\n        this.props.handleLogIn(this.state.username);\r\n        this.setState({username: ''})\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({username: e.target.value});\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n        <div class=\"container logIn\">\r\n            <div align=\"middle\"  class=\"jumbotron border border-primary rounded\">\r\n            <h1 class=\"display-8\">Log In</h1>\r\n            <hr></hr><hr></hr>\r\n            <br></br>\r\n            \r\n            <form\r\n            onSubmit={this.handleLogIn}>\r\n            <div class=\"input-group input-group-sm mb-3\">\r\n                <div class=\"input-group-prepend\">\r\n                    <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">@</span>\r\n                </div>\r\n                <input value = {this.state.username} onChange={this.handleChange} type=\"text\" class=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"></input>\r\n                \r\n                \r\n            </div>\r\n            <br></br>\r\n            <button type=\"Submit\" class=\"btn btn-outline-primary\">ENTER</button>\r\n\r\n            <br></br><br></br>\r\n\r\n            <div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n            <strong>frickity frick!<br></br> please login with </strong><br></br> \"First \",\"Gerebab \",\"Watson \",or ,\"Horse\"\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            </div>\r\n            </form>\r\n        \r\n            </div> \r\n\r\n\r\n\r\n        </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default LogIn;","import React, { Component } from 'react';\r\n\r\nclass NavBar extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n\r\n        \r\n                <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\" >\r\n                <a class=\"navbar-brand\" href=\"#\">LiveChat</a>\r\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span class=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n                    <ul class=\"navbar-nav\">\r\n                    <li class=\"nav-item active\">\r\n                        <a class=\"nav-link\" href=\"https://anthonysf.github.io/LiveChat/\">Home <span class=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    <li class=\"nav-item active\">\r\n                        <a class=\"nav-link\" href=\"https://github.com/AnthonySf/ChatApp\">GitHub</a>\r\n                    </li>\r\n                    <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        More\r\n                        </a>\r\n                        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                        <a class=\"dropdown-item\" href=\"https://github.com/AnthonySf/ChatApp\">Log Out</a>\r\n                        <a class=\"dropdown-item\" href=\"https://en.wikipedia.org/wiki/Special:Random\">Chatting Ideas</a>\r\n                        <a class=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#myModal\">Info</a>\r\n                        </div>\r\n                    </li>\r\n                    </ul>\r\n                </div>\r\n                \r\n\r\n                    <div id=\"myModal\" class=\"modal fade\" role=\"dialog\">\r\n                    <div class=\"modal-dialog modal-dialog-centered\">\r\n\r\n\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                        <h4 class=\"modal-title\">LiveChat Info</h4>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                        <p>Web chat application developed in 2019</p>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-outline-warning\" data-dismiss=\"modal\">Close</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    </div>\r\n                    </div>\r\n                    </nav>\r\n\r\n\r\n            \r\n         );\r\n    }\r\n}\r\n \r\nexport default NavBar;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { stat } from 'fs';\r\n\r\nclass NewRoomForm extends React.Component {\r\n\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            roomName: \"\"\r\n\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            roomName: e.target.value\r\n        })\r\n    }  \r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n        this.props.createRoom(this.state.roomName)\r\n        this.setState({roomName: ''})\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"new-room-form\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input\r\n                        value={this.state.roomName}\r\n                        onChange={this.handleChange}\r\n                        type=\"text\" \r\n                        placeholder=\"New Room\" \r\n                        required />\r\n                    <button id=\"create-room-btn\" type=\"submit\">+</button>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewRoomForm","import React from 'react'\r\nimport { thisExpression } from '@babel/types';\r\nimport { parseExpression } from '@babel/parser';\r\n\r\nclass UsersList extends React.Component {\r\n    render () {\r\n        \r\n        console.log(\"array\" , Object.values(this.props.roomUsers));\r\n        \r\n        let userPresence = [];\r\n        for (let [key, value] of Object.entries(this.props.roomUsers)) {\r\n            userPresence.push(<li key={key}>{key} : {value}</li>)\r\n        }\r\n\r\n        \r\n        return (\r\n            <div className=\"userslist border border-success border-3\">\r\n            \r\n            <h3>Users:</h3>\r\n            <hr></hr>\r\n            <p>Updated in Real Time!</p>\r\n\r\n            {userPresence}\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UsersList","import React from 'react'\nimport chatkit from '@pusher/chatkit-client'\nimport MessageList from './components/MessageList'\nimport SendMessageForm from './components/SendMessageForm'\nimport RoomList from './components/RoomList'\nimport LogIn from './components/LogIn'\nimport NavBar from './components/NavBar'\nimport NewRoomForm from './components/NewRoomForm'\nimport UsersList from './components/UsersList'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nconst tokenUrl = \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/4f056a27-330e-4e1e-9f7e-6bbee987067a/token\";\nconst instanceLocator = \"v1:us1:4f056a27-330e-4e1e-9f7e-6bbee987067a\";\n\n\n\nclass App extends React.Component {\n\n    constructor(){\n\n        super();\n        this.state = {\n            roomId: null,\n            messages: [],\n            joinableRooms: [],\n            joinedRooms: [],\n            isLoggedIn: false,\n            username: '',\n            roomUsers: [],\n            currentRoom: null,\n            \n        }\n        this.sendMessage = this.sendMessage.bind(this)\n        this.subscribeToRoom = this.subscribeToRoom.bind(this)\n        this.getRooms = this.getRooms.bind(this)\n        this.createRoom = this.createRoom.bind(this)\n        this.RenderChatRoom = this.RenderChatRoom.bind(this)\n        this.handleLogIn = this.handleLogIn.bind(this)\n        this.Connect = this.Connect.bind(this)\n        this.updateRoomUsers = this.updateRoomUsers.bind(this)\n    }\n    \n\n    Connect(userIdPassed){\n\n        const tokenProvider = new chatkit.TokenProvider({\n            url: tokenUrl\n          });\n          \n          const chatManager = new chatkit.ChatManager({\n            instanceLocator: instanceLocator,\n            userId: userIdPassed,\n            tokenProvider: tokenProvider\n          });\n\n        \n\n        chatManager\n            .connect({\n                onPresenceChanged: user=>{\n                    this.updateRoomUsers();\n                }\n            })\n            .then(currentUser => {\n                this.currentUser = currentUser;\n\n                this.getRooms();\n                \n                \n            })\n            .catch(error => {\n                console.error(\"error:\", error);\n            });          \n\n\n}\n\n\n\ngetRooms(){\n    this.currentUser.getJoinableRooms()\n                .then(joinableRooms => {\n                    this.setState({\n                        joinableRooms,\n                        joinedRooms: this.currentUser.rooms\n                    })\n                })\n                .catch(err => console.log('error on joinableRooms: '));\n}\n\nsubscribeToRoom(roomId){\n    this.setState({messages: []});\n    this.currentUser.subscribeToRoomMultipart({\n        roomId: roomId,\n        hooks: {\n          onMessage: message => {\n              this.setState({\n                  messages: [...this.state.messages,message] \n\n              })\n              \n              \n           \n          }\n        }\n      })\n      .then(room => {\n        this.setState({\n            roomId: room.id,\n            roomUsers: room.users[0].presenceStore,\n            currentRoom: room,\n        })\n        this.getRooms()\n    })\n    .catch(err => 'error on subscribing to room: ')\n}\n\n\nsendMessage(text){\n    this.currentUser.sendSimpleMessage({\n        text,\n        roomId: this.state.roomId\n\n    });\n}\n\n    createRoom(roomName){\n        this.currentUser.createRoom({name: roomName})\n        .then(room => this.subscribeToRoom(room.id))\n        .catch(err => console.log('error with createRoom: '))\n    }\n\n    handleLogIn(username){\n        this.Connect(username);\n        this.setState({username: username , isLoggedIn: true});\n        \n        \n\n    }\n    \n    updateRoomUsers(){\n        if(this.state.currentRoom){\n            this.setState({\n            roomUsers: this.state.currentRoom.users[0].presenceStore\n        })\n        }\n        \n    }\n\n    RenderChatRoom(){\n        console.log(\"RoomUsers: \", this.state.roomUsers);\n        if(this.state.isLoggedIn){\n            return (\n           \n                <div className=\"app\">\n                    <UsersList roomUsers={this.state.roomUsers} />\n                    <NavBar />\n                    <RoomList roomId={this.state.roomId} subscribeToRoom={this.subscribeToRoom} rooms={[...this.state.joinableRooms, ...this.state.joinedRooms]} />\n                    <MessageList roomId= {this.state.roomId} messages={this.state.messages}/>\n                    <SendMessageForm disabled={!this.state.roomId} sendMessage={this.sendMessage}/>\n                    <NewRoomForm createRoom={this.createRoom} />\n                </div>\n            );\n        }\n        else{\n            return(\n                <div>\n                    <LogIn handleLogIn={this.handleLogIn}/>\n                </div>\n            )\n        }\n        \n    }\n\n\n    render() {\n        return(\n            \n            <div>{this.RenderChatRoom()}</div>\n            \n            \n        )\n        \n    }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}